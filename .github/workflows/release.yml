name: Blauhaus Packages
on:
  push:
    branches:
    - release/*

jobs:

  build:
     runs-on: ubuntu-latest
     steps:
     - uses: actions/checkout@v1
     - name: Set Version
       run: |
        npm install @actions/core --save
        node ./scripts/getversion.js
     - name: Build NuGet Packages
       run: |
        dotnet pack -p:PackageVersion=${VERSION_NAME} ./Blauhaus.Ioc/Blauhaus.Ioc.sln --configuration Release --output ./
        dotnet test ./Blauhaus.Ioc/Blauhaus.Ioc.sln
     - name: Deploy NuGet Packages
       run: |
        dotnet nuget push /home/runner/work/Blauhaus.Ioc/Blauhaus.Ioc/Blauhaus.Ioc.Abstractions.${VERSION_NAME}.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
        dotnet nuget push /home/runner/work/Blauhaus.Ioc/Blauhaus.Ioc/Blauhaus.Ioc.DotNetCoreIocService.${VERSION_NAME}.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
        dotnet nuget push /home/runner/work/Blauhaus.Ioc/Blauhaus.Ioc/Blauhaus.Ioc.DryIocService.${VERSION_NAME}.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
        dotnet nuget push /home/runner/work/Blauhaus.Ioc/Blauhaus.Ioc/Blauhaus.Ioc.MvvmCrossIocService.${VERSION_NAME}.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
        dotnet nuget push /home/runner/work/Blauhaus.Ioc/Blauhaus.Ioc/Blauhaus.Ioc.ServiceProviderIocService.${VERSION_NAME}.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
        dotnet nuget push /home/runner/work/Blauhaus.Ioc/Blauhaus.Ioc/Blauhaus.Ioc.TestHelpers.${VERSION_NAME}.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
